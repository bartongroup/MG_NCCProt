---
title: "Nascent Chromatin Capture Proteomics"
author:
  - name: Marek Gierlinski
    affiliations: Data Analysis Group
    note: "Creator of this report"
  - name: Susanne Bandau
    affiliation: Molecular Cell and Developmental Biology
  - name: Constance Adalbert
    affiliation: Molecular Cell and Developmental Biology
date: today
date-format: "D MMMM YYYY"
execute:
  echo: false
  cache: true
  warning: false
format:
  html:
    theme:
      - journal
      - report.scss
    toc: true
editor: source
self-contained: true
---

```{r libraries, cache=FALSE, include=FALSE}
suppressPackageStartupMessages({
  library(targets)
  library(tidyverse)
  library(gt)
  library(cowplot)
  library(UpSetR)
})

tar_config_set(store = "../_targets")
```

# Proposal

We have two different experiments that we would like to analyse (all proteomics data):

1.  iPOND experiment: This is the experiment that we discussed during our meeting. We isolated nascent, 1h and 2h chromatin -/+ inhibitor treatment as well as took the corresponding total extracts for each sample before adding the beads to analyse total protein amounts (Input). Since we use two different inhibitors (TPL or DRB), we have 9 sample + 1 negative control (unlabelled) for IP as well as 10 Input samples per experiment; n=3(4)

2.  IPOND chase experiments: 6 sample + control (per experiments); n=3 Instead of isolating nascent chromatin, we analyse the chromatin 24h after labelling. This experiment is to consolidate whether the changes seen on nascent chromatin (iPOND experiment) are also seen on total chromatin.

In both cases, we would like to identify proteins/protein groups that show significant foldchanges between time points and treatment (volcano plots). Filter for the significant changing proteins and subject them to a hierarchical clustering analysis as well as to perform GO term analysis.

The Input samples are total lysate and are used to see whether changes observed on newly replicated chromatin are due to changes in total protein level. The inhibitor that we are using are transcription inhibitor and even the treatment is short might affect the expression of certain proteins.
 
The negative controls are cells that are not labelled with EdU and are used to account for non-specific binding to the streptavidin beads that we are using for the pulldown. To perform the pulldown, we are performing a Click-IT reaction to attach Biotin onto EdU. The Biotin attached to the EdU then allows us to pulldown EdU labelled chromatin using streptavidin beads. The non-specific binding during an iPOND experiments can be high.
I normally harvest them together with the 2h time point but since they are unlabelled, untreated, asynchronized cells, the time they are harvest is not that important.

# Design


```{r}
#| label: tbl-metadata
#| tbl-cap: Design of the experiment. Colour-shaded rows indicate grouping by experiment (E1, E2) and protocol (IP, input).
tar_load(metadata) 
metadata |> 
  group_by(experiment, protocol) |> 
  gt() |> 
  sub_missing(
    missing_text = ""
  ) |> 
  tab_options(
    row_group.background.color = "#FFEFDB"
  )
```

```{r}
#| label: fig-design-e1
#| fig-cap: Illustration of experiment 1 design.
knitr::include_graphics("images/design_1.png")
```

```{r}
#| label: fig-design-e2
#| fig-cap: Illustration of experiment 2 design.
knitr::include_graphics("images/design_2.png")
```

# Data

## Source and filtering

Three `proteinGroups` files were used as the starting point. Data were filtered to remove reverse sequences and potential contaminants. Also, only proteins with at least 3 razor pepties were kept.

## Protein detection



```{r}
#| label: fig-protein-detection
#| fig-cap: Number of detected proteins in each sample
#| fig-width: 8
#| fig-height: 12
g1 <- tar_read(fig_sample_detection_e1_ip)
g2 <- tar_read(fig_sample_detection_e1_input)
g3 <- tar_read(fig_sample_detection_e2_ip)
plot_grid(g1, g2, g3, ncol = 1, labels = c("A", "B", "C"))
```


## Correlation matrix

@fig-cormat shows Pearson's correlation coefficient for all pairs of samples. It is a bit messy. The bad sample is clearly visible as a dark row and column. The figure is based on logarithm of normalised intensities.

```{r}
#| label: fig-cormat
#| fig-cap: Correlation matrix for all samples.
#| fig-width: 6
#| fig-height: 20
g1 <- tar_read(fig_matrix_e1_ip)
g2 <- tar_read(fig_matrix_e1_input)
g3 <- tar_read(fig_matrix_e2_ip)
plot_grid(g1, g2, g3, ncol = 1, labels = c("A", "B", "C")) 

```

## PCA

@fig-pca shows first two principal components, based on logarithm of normalised intensities. The bad replicate stands out.

```{r}
#| label: fig-pca
#| fig-cap: PCA decomposition based on logarithm of normalised intensity.
#| fig-width: 6
#| fig-height: 14
g1 <- tar_read(fig_pca_e1_ip)
g2 <- tar_read(fig_pca_e1_input)
g3 <- tar_read(fig_pca_e2_ip)
plot_grid(g1, g2, g3, ncol = 1, labels = c("A", "B", "C")) 
```

## Clustering

@fig-clustering shows clustering of all samples. Colours represent batches. We can see that batch effects dominate this experiment. Hierarchical clustering was calculated based on logarithm of normalised intensities, with Euclidean distance, using complete linkage method.

```{r}
#| label: fig-clustering
#| fig-cap: Dendrogram of samples, based on logarithm of normalised intensity. 
#| fig-width: 8
#| fig-height: 18
g1 <- tar_read(fig_clustering_e1_ip)
g2 <- tar_read(fig_clustering_e1_input)
g3 <- tar_read(fig_clustering_e2_ip)
plot_grid(g1, g2, g3, ncol = 1, labels = c("A", "B", "C"), rel_heights = c(3, 3, 2))
```


# Experiment 1 IP

## Differential abundance

### Description

#### From limma R vignette

For differential expression we use `limma`. It used an empirical Bayes method to squeeze the peptide-wise residual variances towards a common value (or towards a global trend) (Smyth, 2004; Phipson et al, 2016). The degrees of freedom for the individual variances are increased to reflect the extra information gained from the empirical Bayes moderation, resulting in increased statistical power to detect differential expression.

For more information see [Ritchie et al. 2015](https://academic.oup.com/nar/article/43/7/e47/2414268).

#### In simpler words

`limma` uses a t-test, which is moderated by borrowing data across all peptides. A global variance model is built and moderation squeezes variances towards this global trend. Extreme variances (either large or small) become less extreme, which makes the test more robust to random outliers.

### Full model

First, we analyse all data using a 'full' model taking into account all potential effects:

`~ treatment + time_point + batch`

The differential abundance is calculated with respect to the baseline:

-   treatment = DMSO
-   time_point = Nascent
-   batch = B1

@fig-da-full shows volcano and MA plots for each of the coefficients. Each panel corresponds to one value of one coefficient, showing differential abundance with respect to the baseline.

```{r}
#| label: fig-da-full
#| fig-cap: Differential abundance plots of the full model `~ treatment + time_point + batch`. Black points indicate proteins with significant differential abundance, defined as FDR < 0.01. A. Volcano plot. B. MA plot.
#| fig-width: 8
#| fig-height: 14
g1 <- tar_read(fig_volcano_full_e1_ip)
g2 <- tar_read(fig_ma_full_e1_ip)
plot_grid(g1, g2, labels = c("A", "B"), ncol = 1)
```

### Selected contrasts

Next, selected contrasts, or pairs of conditions, were selected and differential abundance was carried out. @fig-da-contrasts shows volcano and MA plots for each contrast.

```{r}
#| label: fig-da-contrasts
#| fig-cap: Differential abundance for a selection of contrasts. Black points indicate proteins with significant differential abundance, defined as FDR < 0.01. A. Volcano plot. B. MA plot.
#| fig-width: 8
#| fig-height: 14
g1 <- tar_read(fig_volcano_contrasts_e1_ip)
g2 <- tar_read(fig_ma_contrasts_e1_ip)
plot_grid(g1, g2, labels = c("A", "B"), ncol = 1)
```



# Session info

```{r}
#| label: session-info
#| cache: false
si <- targets::tar_read(session_info)
si$loadedOnly <- NULL
si
```
